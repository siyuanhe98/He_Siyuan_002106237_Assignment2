/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cars;
import model.CarsList;

/**
 *
 * @author Administrator
 */
public class UpdateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateJPanel
     */
    private CarsList carsList;
    private Cars slscar;
    public UpdateJPanel(CarsList carsList) {
        initComponents();
        this.carsList = carsList;
        popluateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblCars = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        lblAvail = new javax.swing.JLabel();
        txtAvail = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        lblAvail1 = new javax.swing.JLabel();

        tblCars.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        tblCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand", "Year", "Seats", "Id", "Name", "Avail", "City"
            }
        ));
        jScrollPane2.setViewportView(tblCars);

        btnSave.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblAvail.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        lblAvail.setText("Availability:");

        lblCity.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        lblCity.setText("City:");

        btnView.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        btnView.setText("Search");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Update Availability and City of Cars");

        jLabel1.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabel1.setText("Input the Id of the car you want to update:");

        lblAvail1.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        lblAvail1.setText("Time of cars updated:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(5, 5, 5)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAvail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblCity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAvail1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(lblTitle)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvail)
                    .addComponent(txtAvail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAvail1))
                .addContainerGap(437, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnView, jLabel1, txtId});

    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        UpdateCarsTable();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        populateSelectedCarsTable();
    }//GEN-LAST:event_btnViewActionPerformed

    public void populateSelectedCarsTable() {
        boolean find = false;
        for(Cars car : carsList.getCarsList()){
            if(car.getId() == Integer.parseInt(txtId.getText())){
                slscar = car;
                txtCity.setText(car.getCity());
                if(car.isAvail()){
                    txtAvail.setText("Yes");
                }else{
                    txtAvail.setText("No");
                }
                find = true;
            }
        }
        if(!find){
            JOptionPane.showMessageDialog(this, "No car is Found!");
            txtId.setText("");
        }
    }
    public void UpdateCarsTable() {
        if(!txtCity.getText().matches("[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*")){   
            JOptionPane.showMessageDialog(this, "Please input City!","Warning", JOptionPane.ERROR_MESSAGE);
            txtCity.setText("");
            return;
        }else{
            slscar.setCity(txtCity.getText());
        }
        
        if(txtAvail.getText().equalsIgnoreCase("Yes")){
            slscar.setAvail(true);
        }else if(txtAvail.getText().equalsIgnoreCase("No")){
            slscar.setAvail(false);
        }else{
            JOptionPane.showMessageDialog(this, "Please input Availability!","Warning", JOptionPane.ERROR_MESSAGE);
            txtAvail.setText("");
            return;
        }
        System.out.println(slscar.getCity());
        popluateTable();
        System.out.println(slscar.getCity());
        JOptionPane.showMessageDialog(this, "Information Updated.");
        Date date = new Date();
        txtTime.setText(date.toString());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAvail;
    private javax.swing.JLabel lblAvail1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCars;
    private javax.swing.JTextField txtAvail;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables

    public void popluateTable() {
        DefaultTableModel model = (DefaultTableModel)tblCars.getModel();
        model.setRowCount(0);
        for(Cars car : carsList.getCarsList()){
            Object[] row = new Object[7];
            row[0] = car.getBrand();
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getId();
            row[4] = car.getName();
            if(car.isAvail()){
                row[5] = "Yes";
            }else{
                row[5] = "No";
            }
            row[6] = car.getCity();
            model.addRow(row);
        }
    }
}
