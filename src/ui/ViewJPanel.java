/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.CardLayout;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Cars;
import model.CarsList;

/**
 *
 * @author Administrator
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    private CarsList carsList;
    int availNum = 0;
    public ViewJPanel(CarsList carsList) {
        initComponents();
        this.carsList = carsList;
        popluateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCars = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCarsFiltered = new javax.swing.JTable();
        btnBrand = new javax.swing.JButton();
        txtBrand = new javax.swing.JTextField();
        btnYear = new javax.swing.JButton();
        txtYear = new javax.swing.JTextField();
        txtMaxSeats = new javax.swing.JTextField();
        btnSeats = new javax.swing.JButton();
        txtMinSeats = new javax.swing.JTextField();
        btnName = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        btnMain = new javax.swing.JButton();
        btnManu = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblManu = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        lblTitle.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View Cars");

        tblCars.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        tblCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand", "Year", "Seats", "Id", "Name", "Avail", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCars);
        if (tblCars.getColumnModel().getColumnCount() > 0) {
            tblCars.getColumnModel().getColumn(0).setHeaderValue("Brand");
            tblCars.getColumnModel().getColumn(1).setHeaderValue("Year");
            tblCars.getColumnModel().getColumn(2).setHeaderValue("Seats");
            tblCars.getColumnModel().getColumn(3).setHeaderValue("Id");
            tblCars.getColumnModel().getColumn(4).setHeaderValue("Name");
            tblCars.getColumnModel().getColumn(5).setHeaderValue("Avail");
            tblCars.getColumnModel().getColumn(6).setHeaderValue("City");
        }

        tblCarsFiltered.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        tblCarsFiltered.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Brand", "Year", "Seats", "Id", "Name", "Avail", "City"
            }
        ));
        jScrollPane3.setViewportView(tblCarsFiltered);
        if (tblCarsFiltered.getColumnModel().getColumnCount() > 0) {
            tblCarsFiltered.getColumnModel().getColumn(1).setHeaderValue("Year");
            tblCarsFiltered.getColumnModel().getColumn(2).setHeaderValue("Seats");
            tblCarsFiltered.getColumnModel().getColumn(3).setHeaderValue("Id");
            tblCarsFiltered.getColumnModel().getColumn(4).setHeaderValue("Name");
            tblCarsFiltered.getColumnModel().getColumn(5).setHeaderValue("Avail");
            tblCarsFiltered.getColumnModel().getColumn(6).setHeaderValue("City");
        }

        btnBrand.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        btnBrand.setText("Filtered by Brand");
        btnBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrandActionPerformed(evt);
            }
        });

        btnYear.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        btnYear.setText("Filtered by Year");
        btnYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYearActionPerformed(evt);
            }
        });

        btnSeats.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        btnSeats.setText("Filtered by Seats");
        btnSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeatsActionPerformed(evt);
            }
        });

        btnName.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        btnName.setText("Filtered by Model Number");
        btnName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNameActionPerformed(evt);
            }
        });

        btnMain.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        btnMain.setText("Expired Cars(Manufactured 10 years ago)");
        btnMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainActionPerformed(evt);
            }
        });

        btnManu.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        btnManu.setText("List All Manufacturer");
        btnManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManuActionPerformed(evt);
            }
        });

        tblManu.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        tblManu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Manufacturer"
            }
        ));
        jScrollPane4.setViewportView(tblManu);

        jLabel1.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabel1.setText("Input year:");

        jLabel2.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabel2.setText("Input brand:");

        jLabel3.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabel3.setText("Input model number:");

        jLabel4.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabel4.setText("From:");

        jLabel5.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jLabel5.setText("To:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnMain, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSeats)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnBrand)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnYear)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(btnManu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(lblTitle)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBrand)
                    .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnYear)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSeats)
                    .addComponent(txtMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMain)
                    .addComponent(btnManu))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(160, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBrand, btnYear, jLabel1, jLabel2, txtBrand, txtYear});

    }// </editor-fold>//GEN-END:initComponents

    private void btnBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrandActionPerformed
        // TODO add your handling code here:
        populateBrandCarsTable();
        txtBrand.setText("");
    }//GEN-LAST:event_btnBrandActionPerformed

    private void btnYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYearActionPerformed
        // TODO add your handling code here:
        populateYearCarsTable();
        txtYear.setText("");
    }//GEN-LAST:event_btnYearActionPerformed

    private void btnSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeatsActionPerformed
        // TODO add your handling code here:
        populateSeatCarsTable();
        txtMinSeats.setText("");
        txtMaxSeats.setText("");
    }//GEN-LAST:event_btnSeatsActionPerformed

    private void btnNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNameActionPerformed
        // TODO add your handling code here:
        populateNameCarsTable();
        txtName.setText("");
    }//GEN-LAST:event_btnNameActionPerformed

    private void btnMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainActionPerformed
        // TODO add your handling code here:
        populateexpiredCarsTable();
    }//GEN-LAST:event_btnMainActionPerformed

    private void btnManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManuActionPerformed
        // TODO add your handling code here:
        poplateManuTable();
    }//GEN-LAST:event_btnManuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrand;
    private javax.swing.JButton btnMain;
    private javax.swing.JButton btnManu;
    private javax.swing.JButton btnName;
    private javax.swing.JButton btnSeats;
    private javax.swing.JButton btnYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCars;
    private javax.swing.JTable tblCarsFiltered;
    private javax.swing.JTable tblManu;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtMaxSeats;
    private javax.swing.JTextField txtMinSeats;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    public void popluateTable() {
        DefaultTableModel model = (DefaultTableModel)tblCars.getModel();
        model.setRowCount(0);
        for(Cars car : carsList.getCarsList()){
            Object[] row = new Object[7];
            row[0] = car.getBrand();
            row[1] = car.getYear();
            row[2] = car.getSeats();
            row[3] = car.getId();
            row[4] = car.getName();
            if(car.isAvail()){
                row[5] = "Yes";
            }else{
                row[5] = "No";
            }
            row[6] = car.getCity();
            model.addRow(row);
        }
    }

    private void populateBrandCarsTable() {
        DefaultTableModel model = (DefaultTableModel) tblCarsFiltered.getModel();
        model.setRowCount(0);
        for(Cars car : carsList.getCarsList()){
            if(car.getBrand().equalsIgnoreCase(txtBrand.getText())){
                Object[] row = new Object[7];
                row[0] = car.getBrand();
                row[1] = car.getYear();
                row[2] = car.getSeats();
                row[3] = car.getId();
                row[4] = car.getName();
                if(car.isAvail()){
                    row[5] = "Yes";
                }else{
                    row[5] = "No";
                }
                row[6] = car.getCity();
                model.addRow(row);
            }
        }
    }

    private void populateYearCarsTable() {
        DefaultTableModel model = (DefaultTableModel) tblCarsFiltered.getModel();
        model.setRowCount(0);
        for(Cars car : carsList.getCarsList()){
            if(car.getYear().equals(txtYear.getText())){
                Object[] row = new Object[7];
                row[0] = car.getBrand();
                row[1] = car.getYear();
                row[2] = car.getSeats();
                row[3] = car.getId();
                row[4] = car.getName();
                if(car.isAvail()){
                    row[5] = "Yes";
                }else{
                    row[5] = "No";
                }
                row[6] = car.getCity();
                model.addRow(row);
            }
        }
    }

    private void populateSeatCarsTable() {
        DefaultTableModel model = (DefaultTableModel) tblCarsFiltered.getModel();
        model.setRowCount(0);
        for(Cars car : carsList.getCarsList()){
            if((car.getSeats() >= Integer.parseInt(txtMinSeats.getText()))&&(car.getSeats() <= Integer.parseInt(txtMaxSeats.getText()))){
                Object[] row = new Object[7];
                row[0] = car.getBrand();
                row[1] = car.getYear();
                row[2] = car.getSeats();
                row[3] = car.getId();
                row[4] = car.getName();
                if(car.isAvail()){
                    row[5] = "Yes";
                }else{
                    row[5] = "No";
                }
                row[6] = car.getCity();
                model.addRow(row);
            }
        }
    }

    private void populateNameCarsTable() {
        DefaultTableModel model = (DefaultTableModel) tblCarsFiltered.getModel();
        model.setRowCount(0);
        for(Cars car : carsList.getCarsList()){
            if(car.getName().equalsIgnoreCase(txtName.getText())){
                Object[] row = new Object[7];
                row[0] = car.getBrand();
                row[1] = car.getYear();
                row[2] = car.getSeats();
                row[3] = car.getId();
                row[4] = car.getName();
                if(car.isAvail()){
                    row[5] = "Yes";
                }else{
                    row[5] = "No";
                }
                row[6] = car.getCity();
                model.addRow(row);
            }
        }
    }

    
    private void populateexpiredCarsTable() {
        DefaultTableModel model = (DefaultTableModel) tblCarsFiltered.getModel();
        model.setRowCount(0);
        for(Cars car : carsList.getCarsList()){
            if((2021 - Integer.parseInt(car.getYear())) >10){
                Object[] row = new Object[7];
                row[0] = car.getBrand();
                row[1] = car.getYear();
                row[2] = car.getSeats();
                row[3] = car.getId();
                row[4] = car.getName();
                if(car.isAvail()){
                    row[5] = "Yes";
                }else{
                    row[5] = "No";
                }
                row[6] = car.getCity();
                model.addRow(row);
            }
        }
    }

   private void poplateManuTable() {
        DefaultTableModel model = (DefaultTableModel) tblManu.getModel();
        model.setRowCount(0);
        Set<String> manu = new HashSet();
        for(Cars car : carsList.getCarsList()){
            manu.add(car.getBrand());
        }
        for(String manuName : manu){
            Object[] row = new Object[1];
            row[0] = manuName;
            model.addRow(row);
        }
    }
}
